{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Autoninja build log",
            "type": "process",
            "command": "pwsh",
            "args": [
                "-NoLogo",
                "-NoProfile",
                "-NonInteractive",
                "-ExecutionPolicy", "Bypass",
                "-File", "${env:PwshProfilePath}\\Get-AutoNinjaLog.ps1", "${workspaceFolder}",
            ],
            "group": "build",
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "silent"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": [
                {
                    "owner": "autoninja",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}\\a\\b"
                    ],
                    "pattern": [
                        {
                            // ../../edge_embedded_browser/public/cpp/embedded_browser_utils_win.cc(170,5): error: indirection requires pointer operand ('IDataObject' invalid)
                            "regexp": "^(.*)\\((\\d+),(\\d+)\\)\\s*:\\s+([^: ]+)[^:]*:\\s*(.*)$",
                            "file": 1,
                            "line": 2,
                            "column": 3,
                            "severity": 4,
                            "message": 5
                        }
                    ]
                },
                {
                    "owner": "autoninja",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}\\a\\b"
                    ],
                    "pattern": [
                        {
                            // ..\..\edge_embedded_browser\client\win\current\webview2private.idl(425) : error MIDL2270 : duplicate UUID. Same as : ICoreWebView2Private2 [ Interface 'ICoreWebView2Private4'  ]
                            "regexp": "^(.*)\\((\\d+)\\)\\s*:\\s*([^: ]+)[^:]*:\\s*(.*)$",
                            "file": 1,
                            "line": 2,
                            "severity": 3,
                            "message": 4
                        }
                    ]
                },
                {
                    "owner": "autoninja",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}\\a\\b"
                    ],
                    "pattern": [
                        {
                            "regexp": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{7}Z (.*):(\\d+):(\\d+):\\s+([^:]+):\\s+(.*)$",
                            "file": 1,
                            "line": 2,
                            "column": 3,
                            "severity": 4,
                            "message": 5
                        }
                    ]
                }
            ]
        },
        {
            "label": "Watch Autoninja build log",
            "isBackground": true,
            "type": "process",
            "command": "pwsh",
            "args": [
                "-NoLogo",
                "-NoProfile",
                "-NonInteractive",
                "-ExecutionPolicy", "Bypass",
                "-File", "${env:PwshProfilePath}\\Get-AutoNinjaLog.ps1", "${workspaceFolder}", "-Watch",
            ],
            "group": "build",
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "silent"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": [
                {
                    "owner": "autoninja",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}\\a\\b"
                    ],
                    "pattern": [
                        {
                            "regexp": "^(.*)\\((\\d+),(\\d+)\\)\\s*:\\s*([^: ]+)[^:]*:\\s*(.*)$",
                            "file": 1,
                            "line": 2,
                            "column": 3,
                            "severity": 4,
                            "message": 5
                        },
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "---START LOG note---",
                        "endsPattern": "---END LOG note---",
                    }
                },
                {
                    "owner": "autoninja",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}\\a\\b"
                    ],
                    "pattern": [
                        {
                            // ..\..\edge_embedded_browser\client\win\current\webview2private.idl(425) : error MIDL2270 : duplicate UUID. Same as : ICoreWebView2Private2 [ Interface 'ICoreWebView2Private4'  ]
                            "regexp": "^(.*)\\((\\d+)\\)\\s*:\\s*([^: ]+)[^:]*:\\s*(.*)$",
                            "file": 1,
                            "line": 2,
                            "severity": 3,
                            "message": 4
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "---START LOG note---",
                        "endsPattern": "---END LOG note---",
                    }
                }
            ]
        },
        {
            "label": "ADO PR Issues",
            "type": "process",
            "command": "pwsh",
            "args": [
                "-NoLogo",
                "-NonInteractive",
                "-ExecutionPolicy", "Bypass",
                "-Command", "Get-AdoPullRequestIssues -Path ${workspaceFolder}"
            ],
            "group": "build",
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "silent"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": [
                {
                    "owner": "adopullrequestissues",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}\\a\\b"
                    ],
                    "pattern": [
                        {
                            // ../../edge_embedded_browser/public/cpp/embedded_browser_utils_win.cc(170,5): error: indirection requires pointer operand ('IDataObject' invalid)
                            "regexp": "^(.*)\\((\\d+),(\\d+)\\)\\s*:\\s+([^: ]+)[^:]*:\\s*(.*)$",
                            "file": 1,
                            "line": 2,
                            "column": 3,
                            "severity": 4,
                            "message": 5
                        }
                    ]
                }
            ]
        },
        {
            "label": "Watch ADO PR Issues",
            "isBackground": true,
            "type": "process",
            "command": "pwsh",
            "args": [
                "-NoLogo",
                "-NonInteractive",
                "-ExecutionPolicy", "Bypass",
                "-Command", "Watch-AdoPullRequestIssues -Path ${workspaceFolder}"
            ],
            "group": "build",
            "presentation": {
                // Reveal the output only if unrecognized errors occur.
                "reveal": "silent"
            },
            // Use the standard MS compiler pattern to detect errors, warnings and infos
            "problemMatcher": [
                {
                    "owner": "adopullrequestissues",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}\\a\\b"
                    ],
                    "pattern": [
                        {
                            "regexp": "^(.*)\\((\\d+),(\\d+)\\)\\s*:\\s*([^: ]+)[^:]*:\\s*(.*)$",
                            "file": 1,
                            "line": 2,
                            "column": 3,
                            "severity": 4,
                            "message": 5
                        },
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "---START LOG note---",
                        "endsPattern": "---END LOG note---",
                    }
                }
            ]
        },
    ]
}